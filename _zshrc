alias ..="cd .."
alias be="bundle exec"
alias c="cd"
alias g="grep"
alias h="history"
alias mvci="mvn clean install"
alias sva="svn st|grep \^?|awk '{print \$2}'|xargs svn add"
alias vh="vagrant halt"
alias vp="vagrant provision"
alias vr="vagrant reload"
alias vs="vagrant ssh"
alias vt="vagrant status"
alias vu="vagrant up"

# bookmarks

alias b1='cd `cat ~/.bookmarks/b1`'
alias b2='cd `cat ~/.bookmarks/b2`'
alias b3='cd `cat ~/.bookmarks/b3`'
alias b4='cd `cat ~/.bookmarks/b4`'
alias b5='cd `cat ~/.bookmarks/b5`'
alias b6='cd `cat ~/.bookmarks/b6`'
alias b7='cd `cat ~/.bookmarks/b7`'
alias b8='cd `cat ~/.bookmarks/b8`'
alias b9='cd `cat ~/.bookmarks/b9`'
alias b10='cd `cat ~/.bookmarks/b10`'
alias s1="pwd > ~/.bookmarks/b1"
alias s2="pwd > ~/.bookmarks/b2"
alias s3="pwd > ~/.bookmarks/b3"
alias s4="pwd > ~/.bookmarks/b4"
alias s5="pwd > ~/.bookmarks/b5"
alias s6="pwd > ~/.bookmarks/b6"
alias s7="pwd > ~/.bookmarks/b7"
alias s8="pwd > ~/.bookmarks/b8"
alias s9="pwd > ~/.bookmarks/b9"
alias s10="pwd > ~/.bookmarks/b10"

function bl() {
	if [ ! -d ~/.bookmarks ]; then
		mkdir ~/.bookmarks
	fi

	for BM in `cd ~/.bookmarks && grep -H . b* 2> /dev/null`; do echo $BM; done
}

function keyup() {
	if [ "$2" = "" ]; then
		cat ~/.ssh/id_rsa.pub | ssh $1 'mkdir -m 0700 -p ~/.ssh; cat >> ~/.ssh/authorized_keys'
	else
		cat $2 | ssh $1 'mkdir -m 0700 -p ~/.ssh; cat >> ~/.ssh/authorized_keys'
	fi
}


function jp() {
	CURRENT_PROJECT=$1
	if [ "$1" = "" ]; then
		echo "Enter Project Name;"
		read CURRENT_PROJECT
	fi

	mkdir -p $CURRENT_PROJECT/src/{main,test}/java
	mkdir -p $CURRENT_PROJECT/src/test/resources
	cat > $CURRENT_PROJECT/.gitignore << EOT
.DS_Store
.classpath
.project
*.swp
*.iml
*.ipr
*.iws
libs
reports
target
EOT
	touch $CURRENT_PROJECT/src/main/java/.gitignore
	touch $CURRENT_PROJECT/src/test/java/.gitignore
	touch $CURRENT_PROJECT/src/test/resources/.gitignore
	cat > $CURRENT_PROJECT/Buildfile << EOT
repositories.remote << 'http://repo1.maven.org/maven2'
repositories.remote << 'http://www.ibiblio.org/maven2'

CUCUMBER=[transitive('info.cukes:cucumber-junit:jar:1.0.0.RC6'),transitive('info.cukes:cucumber-java:jar:1.0.0.RC6')]

define '${CURRENT_PROJECT}' do
	project.version = '0.0.0'
	compile.using(:lint => 'all')
	package(:jar)
	test.using(:junit).with(CUCUMBER)
end
EOT
}

echo 'Bookmarks:'
bl

export JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Home

export HISTSIZE=500000
export HISTFILESIZE=500000
export SAVEHIST=$HISTSIZE
export HISTFILE="$HOME/.history"

setopt prompt_subst hist_ignore_dups share_history inc_append_history extended_history autocd
autoload -U compinit
compinit

autoload -Uz vcs_info
zstyle ':vcs_info:*' actionformats \
    '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{3}|%F{1}%a%F{5}]%f '
zstyle ':vcs_info:*' formats       \
    '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{5}]%f '
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b%F{1}:%F{3}%r'

zstyle ':vcs_info:*' enable git cvs svn

# or use pre_cmd, see man zshcontrib
vcs_info_wrapper() {
  vcs_info
  if [ -n "$vcs_info_msg_0_" ]; then
    echo "%{$fg[grey]%}${vcs_info_msg_0_}%{$reset_color%}$del"
  fi
}
RPROMPT=$'$(vcs_info_wrapper)'
PROMPT=$'%F{5}%T %m %~%#%f '

[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"
